digraph G {
rankdir=LR;
fontsize=10;
Battery [shape=box, style=filled, fillcolor=lightblue];
Sensor [shape=box, style=filled, fillcolor=lightblue];
WeatherCondition [shape=box, style=filled, fillcolor=lightblue];
FlightController [shape=box, style=filled, fillcolor=lightblue];
Quadcopter [shape=box, style=filled, fillcolor=lightblue];
Drone [shape=box, style=filled, fillcolor=lightblue];
Obstacle [shape=box, style=filled, fillcolor=lightblue];
CameraSensor [shape=box, style=filled, fillcolor=lightblue];
DroneComponent [shape=box, style=filled, fillcolor=lightblue];
LidarSensor [shape=box, style=filled, fillcolor=lightblue];
Environment [shape=box, style=filled, fillcolor=lightblue];
Quadcopter -> Drone [label=subClassOf, style=dotted, color=blue];
Battery -> DroneComponent [label=subClassOf, style=dotted, color=blue];
FlightController -> DroneComponent [label=subClassOf, style=dotted, color=blue];
CameraSensor -> Sensor [label=subClassOf, style=dotted, color=blue];
LidarSensor -> Sensor [label=subClassOf, style=dotted, color=blue];
Obstacle -> Environment [label=subClassOf, style=dotted, color=blue];
WeatherCondition -> Environment [label=subClassOf, style=dotted, color=blue];
Environment -> Obstacle [label=hasObstacle, fontsize=8];
Drone -> DroneComponent [label=hasComponent, fontsize=8];
Drone -> Environment [label=operatesIn, fontsize=8];
Drone -> Sensor [label=hasSensor, fontsize=8];
DroneX [shape=ellipse, style=filled, fillcolor=lightyellow];
BatteryA [shape=ellipse, style=filled, fillcolor=lightyellow];
LidarA [shape=ellipse, style=filled, fillcolor=lightyellow];
WallObstacle [shape=ellipse, style=filled, fillcolor=lightyellow];
FlightCtrlA [shape=ellipse, style=filled, fillcolor=lightyellow];
CameraA [shape=ellipse, style=filled, fillcolor=lightyellow];
TestArena [shape=ellipse, style=filled, fillcolor=lightyellow];
CameraA;
DroneX -> CameraA [label=hasSensor, color=green];
LidarA;
DroneX -> LidarA [label=hasSensor, color=green];
BatteryA;
DroneX -> BatteryA [label=hasComponent, color=green];
FlightCtrlA;
DroneX -> FlightCtrlA [label=hasComponent, color=green];
TestArena;
DroneX -> TestArena [label=operatesIn, color=green];
WallObstacle;
TestArena -> WallObstacle [label=hasObstacle, color=green];
}
